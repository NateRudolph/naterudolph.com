<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on Personal Portfolio of Nate Rudolph</title>
    <link>https://naterudolph.com/categories/code/</link>
    <description>Recent content in Code on Personal Portfolio of Nate Rudolph</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Feb 2018 23:27:13 -0500</lastBuildDate>
    
	<atom:link href="https://naterudolph.com/categories/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git Aliases</title>
      <link>https://naterudolph.com/posts/2016-04-07-git-aliases/</link>
      <pubDate>Sat, 03 Feb 2018 23:27:13 -0500</pubDate>
      
      <guid>https://naterudolph.com/posts/2016-04-07-git-aliases/</guid>
      <description>It&amp;rsquo;s been my experience that with most new things you learn, even if it&amp;rsquo;s a gradual process, there&amp;rsquo;s a distinct moment when it all clicks. I can remember sitting on the couch running git commands from the terminal to revert my work and just marveling at how cool it felt.
That wore off pretty quickly, and after typing git status for the 16,423,325th time I decided I was ready to commit to some git aliases.</description>
    </item>
    
    <item>
      <title>21st Century Moviola</title>
      <link>https://naterudolph.com/posts/2011-11-14-21st-century-moviola/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://naterudolph.com/posts/2011-11-14-21st-century-moviola/</guid>
      <description>I’ve been working this weekend on mapping out all the technical aspects of the project so that I can keep tabs on my progress and foresee any major obstacles. At this point, I’m starting with the main interaction the editor will have: the hand-crank. Below is the basic workflow the machine will have from the hand-crank to the projector. I’ll be scouting out rotary encoders this week and starting to compile all the code needed to then attach to the video speed.</description>
    </item>
    
    <item>
      <title>Bash script for creating new jekyll post</title>
      <link>https://naterudolph.com/posts/2015-11-23-bash-script-for-creating-new-jekyll-post/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://naterudolph.com/posts/2015-11-23-bash-script-for-creating-new-jekyll-post/</guid>
      <description>After some quick Googling, I wasn&amp;rsquo;t able to find an end-to-end solution for creating a new Jekyll post from bash. My lack of experience in bash leads me to believe this isn&amp;rsquo;t the most succint solution but it works and is readable. Everything&amp;rsquo;s broken down into functions and kicked off at the end. Here&amp;rsquo;s what it looks like in action.
{% include videoEmbed.html path=&amp;ldquo;bash.mov&amp;rdquo; %}
{% highlight sh %} #!/bin/sh</description>
    </item>
    
    <item>
      <title>Batch rotation for video files</title>
      <link>https://naterudolph.com/posts/2016-03-31-batch-rotation-for-video-files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://naterudolph.com/posts/2016-03-31-batch-rotation-for-video-files/</guid>
      <description>&amp;lt;section id=&amp;#34;main&amp;#34;&amp;gt; &amp;lt;div&amp;gt; &amp;lt;h1 id=&amp;#34;title&amp;#34;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt; {{ range .Data.Pages }} {{ .Render &amp;#34;summary&amp;#34;}} {{ end }} &amp;lt;/div&amp;gt; &amp;lt;/section&amp;gt; I recently had a collection of videos I wanted to start editing that needed to be rotated by 180 degrees because they were originally shot on a Redrock lens that flips the image upside down. The files were all uncompressed movs so I wanted a way to also convert everything to mp4 in one step.</description>
    </item>
    
    <item>
      <title>Early Vision Tests</title>
      <link>https://naterudolph.com/posts/2012-05-22-early-vision-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://naterudolph.com/posts/2012-05-22-early-vision-tests/</guid>
      <description>{% include vimeoPlayer.html id=&amp;ldquo;42632017&amp;rdquo; %}
Face tracking courtesy of Kyle McDonald I made a few adjustments to the default Processing sketch he included and wrote in a fairly reliable way to see whether or not the subject&amp;rsquo;s eyes are open. I then added that to a Processing game template found here
Then I combined the two sketches and reset the color of the blocks to make them invisible when the player&amp;rsquo;s eyes are open, and visible when they are closed.</description>
    </item>
    
    <item>
      <title>Knuckledown: Alarm Clock</title>
      <link>https://naterudolph.com/posts/2012-10-21-knuckledown-alarm-clock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://naterudolph.com/posts/2012-10-21-knuckledown-alarm-clock/</guid>
      <description>{% include vimeoPlayer.html align=&amp;ldquo;left&amp;rdquo; id=&amp;ldquo;51867824&amp;rdquo; %}
Most mornings I have every intention on waking up and getting some work done before I go into school. To help remind me I&amp;rsquo;ll sometimes put a note on my alarm clock, but most mornings I can slam down on the snooze buttons with my eyes closed.
Some crazy alarm clocks that run off the nightstand, or explode into puzzle pieces, which does nothing to help remind you why you wanted to wake up a little earlier.</description>
    </item>
    
    <item>
      <title>Knuckledown: Tasks</title>
      <link>https://naterudolph.com/posts/2012-03-05-knuckledown-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://naterudolph.com/posts/2012-03-05-knuckledown-tasks/</guid>
      <description>{% include vimeoPlayer.html id=&amp;ldquo;37455050&amp;rdquo; %}
The goal of Knuckledown is to be a tool that helps to calmly keep someone focused on the task at hand. Users are encouraged to break down one specific task, like writing a paper, into the various tasks that are inferred from the traditional one line on a To-Do list.
Influenced by psychologist Mihaly Csikszentmihalyi’s concept of flow, the application can assist users in achieving a state of total immersion in a task by presenting only the current hurdle.</description>
    </item>
    
    <item>
      <title>Rotary Encoders in oF</title>
      <link>https://naterudolph.com/posts/2011-12-03-rotary-encoders-in-of/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://naterudolph.com/posts/2011-12-03-rotary-encoders-in-of/</guid>
      <description>{% include imageEmbed.html align=&amp;ldquo;left&amp;rdquo; path=&amp;ldquo;rotaryEncodersInOf/photo.jpg&amp;rdquo; %}
This week has been an insane crash course in rotary encoders, Arduino and oF coding. I thought I had a handle on most of the simple types of circuits I would need for this project in Arduino, but working with serial communication between Arduino and oF proved to be quite the challenge. After some help from the amazing faculty at Parsons (we were emailing snippets of code from 2am – 4am…) we finally got things to start talking to each other.</description>
    </item>
    
    <item>
      <title>Videola</title>
      <link>https://naterudolph.com/posts/2011-12-20-videola/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://naterudolph.com/posts/2011-12-20-videola/</guid>
      <description>I received my undergrad in what is called “Film Studies,” because a majority of the movies we watched and wrote about were shot on film. I also grew up in what will be the last generation to have seen a major motion picture premiere that was originally shot and edited on film. As I re-read Murch’s book, “In Blink of an Eye” this semester I was struck by how it knit together my previous education of film with my new path as a student of design and technology.</description>
    </item>
    
  </channel>
</rss>